{"version":3,"sources":["node_modules/@iconify/icons-ic/twotone-more-vert.js","src/@vex/components/secondary-toolbar/secondary-toolbar.component.html","src/app/pages/ui/forms/form-wizard/form-wizard.component.html","src/@vex/animations/fade-in-right.animation.ts","src/@vex/animations/fade-in-up.animation.ts","src/@vex/animations/scale-in.animation.ts","src/@vex/animations/stagger.animation.ts","src/@vex/components/secondary-toolbar/secondary-toolbar.component.scss","src/@vex/components/secondary-toolbar/secondary-toolbar.component.ts","src/@vex/components/secondary-toolbar/secondary-toolbar.module.ts","src/app/pages/ui/forms/form-wizard/form-wizard-routing.module.ts","src/app/pages/ui/forms/form-wizard/form-wizard.component.scss","src/app/pages/ui/forms/form-wizard/form-wizard.component.ts","src/app/pages/ui/forms/form-wizard/form-wizard.module.ts"],"names":[],"mappings":"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","sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2s-2 .9-2 2s.9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","export default \"<div class=\\\"secondary-toolbar-placeholder\\\">&nbsp;</div>\\n\\n<div [ngClass]=\\\"{ 'fixed': fixed$ | async, 'w-full': !(fixed$ | async) }\\\"\\n     class=\\\"secondary-toolbar shadow-b py-1 z-40 border-t\\\"\\n     fxLayout=\\\"row\\\">\\n  <div class=\\\"px-gutter\\\" fxFlex=\\\"auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" vexContainer>\\n    <h1 *ngIf=\\\"current\\\"\\n        class=\\\"subheading-2 font-medium m-0 ltr:pr-3 rtl:pl-3 ltr:border-r rtl:border-l ltr:mr-3 rtl:ml-3\\\"\\n        fxFlex.xs=\\\"auto\\\">{{ current }}</h1>\\n\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\"","export default \"<vex-secondary-toolbar current=\\\"Form Wizard\\\">\\n  <vex-breadcrumbs [crumbs]=\\\"['Forms', 'Form Wizard']\\\" fxFlex=\\\"auto\\\"></vex-breadcrumbs>\\n\\n  <button class=\\\"ml-2\\\" color=\\\"primary\\\" mat-icon-button type=\\\"button\\\">\\n    <mat-icon [icIcon]=\\\"icMoreVert\\\"></mat-icon>\\n  </button>\\n</vex-secondary-toolbar>\\n\\n<div @stagger class=\\\"p-gutter\\\" vexContainer>\\n\\n  <h2 class=\\\"title mb-4\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n    <span @scaleIn\\n          [style.background-color]=\\\"theme.colors.primary['500'] | colorFade:0.9\\\"\\n          class=\\\"w-10 h-10 rounded-full text-primary-500 mr-3 flex items-center justify-center\\\">\\n      <ic-icon [icon]=\\\"icDescription\\\" height=\\\"20px\\\" width=\\\"20px\\\"></ic-icon>\\n    </span>\\n    <span @fadeInRight class=\\\"block\\\">Horizontal Form Wizard</span>\\n  </h2>\\n\\n  <div @fadeInUp class=\\\"card overflow-hidden\\\">\\n    <mat-horizontal-stepper #stepper=\\\"matHorizontalStepper\\\" [linear]=\\\"true\\\">\\n      <ng-template matStepperIcon=\\\"edit\\\">\\n        <mat-icon [icIcon]=\\\"icDoneAll\\\"></mat-icon>\\n      </ng-template>\\n\\n      <ng-template matStepperIcon=\\\"done\\\">\\n        <mat-icon [icIcon]=\\\"icDoneAll\\\"></mat-icon>\\n      </ng-template>\\n\\n      <mat-step [stepControl]=\\\"accountFormGroup\\\">\\n        <form [formGroup]=\\\"accountFormGroup\\\">\\n          <ng-template matStepLabel>Create Account</ng-template>\\n\\n          <h2 class=\\\"title m-0\\\">Create Account</h2>\\n          <div class=\\\"subheading-1\\\">Set up your account for testing purposes.</div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Account Username</mat-label>\\n              <input formControlName=\\\"username\\\" matInput required>\\n              <mat-hint>This will be your unique login name.</mat-hint>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Name</mat-label>\\n              <input formControlName=\\\"name\\\" matInput required>\\n              <mat-hint>How may we call you?</mat-hint>\\n            </mat-form-field>\\n\\n            <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"8px\\\" fxLayoutGap.gt-xs=\\\"24px\\\">\\n              <mat-form-field fxFlex=\\\"auto\\\">\\n                <mat-label>E-Mail</mat-label>\\n                <input formControlName=\\\"email\\\" matInput required>\\n                <mat-hint align=\\\"end\\\">example@example.com</mat-hint>\\n              </mat-form-field>\\n\\n              <div fxFlex=\\\"auto\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"8px\\\">\\n                <mat-form-field class=\\\"vex-flex-form-field\\\" fxFlex=\\\"none\\\">\\n                  <mat-label>Code</mat-label>\\n                  <mat-select formControlName=\\\"phonePrefix\\\">\\n                    <mat-option *ngFor=\\\"let option of phonePrefixOptions\\\" [value]=\\\"option\\\">{{ option }}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"vex-flex-form-field\\\" fxFlex=\\\"auto\\\">\\n                  <mat-label>Phone Number</mat-label>\\n                  <input formControlName=\\\"phone\\\" matInput>\\n                  <mat-hint align=\\\"end\\\"></mat-hint>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button (click)=\\\"stepper.reset()\\\" [disabled]=\\\"accountFormGroup.pristine\\\" color=\\\"primary\\\" mat-button\\n                    type=\\\"button\\\">RESET\\n            </button>\\n            <button [disabled]=\\\"accountFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button matStepperNext>NEXT\\n            </button>\\n          </div>\\n        </form>\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"passwordFormGroup\\\">\\n        <form [formGroup]=\\\"passwordFormGroup\\\">\\n          <ng-template matStepLabel>Select a Password</ng-template>\\n\\n          <h2 class=\\\"title m-0\\\">Select a Password</h2>\\n          <div class=\\\"subheading-1\\\">Enter your password you will use to log in.</div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Password</mat-label>\\n              <input [type]=\\\"passwordInputType\\\" formControlName=\\\"password\\\" matInput required>\\n              <button (click)=\\\"showPassword()\\\" *ngIf=\\\"passwordInputType === 'password'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibility\\\"></mat-icon>\\n              </button>\\n              <button (click)=\\\"hidePassword()\\\" *ngIf=\\\"passwordInputType === 'text'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibilityOff\\\"></mat-icon>\\n              </button>\\n              <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Confirm Password</mat-label>\\n              <input [type]=\\\"passwordInputType\\\" formControlName=\\\"passwordConfirm\\\" matInput required>\\n              <button (click)=\\\"showPassword()\\\" *ngIf=\\\"passwordInputType === 'password'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibility\\\"></mat-icon>\\n              </button>\\n              <button (click)=\\\"hidePassword()\\\" *ngIf=\\\"passwordInputType === 'text'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibilityOff\\\"></mat-icon>\\n              </button>\\n              <mat-hint>Please type in your password again.</mat-hint>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button color=\\\"primary\\\" mat-button matStepperPrevious type=\\\"button\\\">PREVIOUS</button>\\n            <button [disabled]=\\\"passwordFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button matStepperNext>NEXT\\n            </button>\\n          </div>\\n        </form>\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"confirmFormGroup\\\">\\n        <form [formGroup]=\\\"confirmFormGroup\\\">\\n          <ng-template matStepLabel>Confirm Creation</ng-template>\\n\\n          <div class=\\\"title m-0\\\">You're almost there!</div>\\n          <div class=\\\"subheading-1\\\">To finish registration, accept our terms of service and click on \\\"Create Account\\\".\\n          </div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-checkbox class=\\\"checkbox\\\" formControlName=\\\"terms\\\">\\n              I agree to the terms of service and the usual stuff. *\\n            </mat-checkbox>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button color=\\\"primary\\\" mat-button matStepperPrevious type=\\\"button\\\">PREVIOUS</button>\\n            <button (click)=\\\"submit()\\\" [disabled]=\\\"confirmFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button\\n                    matStepperNext>\\n              CREATE ACCOUNT\\n            </button>\\n          </div>\\n        </form>\\n\\n      </mat-step>\\n    </mat-horizontal-stepper>\\n  </div>\\n\\n  <h2 class=\\\"title mt-6 mb-4\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n    <span @scaleIn\\n          [style.background-color]=\\\"theme.colors.primary['500'] | colorFade:0.9\\\"\\n          class=\\\"w-10 h-10 rounded-full text-primary-500 mr-3 flex items-center justify-center\\\">\\n      <ic-icon [icon]=\\\"icVerticalSplit\\\" height=\\\"20px\\\" width=\\\"20px\\\"></ic-icon>\\n    </span>\\n    <span @fadeInRight class=\\\"block\\\">Vertical Form Wizard</span>\\n  </h2>\\n\\n  <div @fadeInUp class=\\\"card overflow-hidden\\\">\\n    <mat-vertical-stepper #verticalStepper=\\\"matVerticalStepper\\\" [linear]=\\\"true\\\">\\n      <ng-template matStepperIcon=\\\"edit\\\">\\n        <mat-icon [icIcon]=\\\"icDoneAll\\\"></mat-icon>\\n      </ng-template>\\n\\n      <ng-template matStepperIcon=\\\"done\\\">\\n        <mat-icon [icIcon]=\\\"icDoneAll\\\"></mat-icon>\\n      </ng-template>\\n\\n      <mat-step [stepControl]=\\\"verticalAccountFormGroup\\\">\\n        <form [formGroup]=\\\"verticalAccountFormGroup\\\">\\n          <ng-template matStepLabel>Create Account</ng-template>\\n\\n          <div class=\\\"title m-0\\\">Create Account</div>\\n          <div class=\\\"subheading-1\\\">Set up your account for testing purposes.</div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Account Username</mat-label>\\n              <input formControlName=\\\"username\\\" matInput required>\\n              <mat-hint>This will be your unique login name.</mat-hint>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Name</mat-label>\\n              <input formControlName=\\\"name\\\" matInput required>\\n              <mat-hint>How may we call you?</mat-hint>\\n            </mat-form-field>\\n\\n            <div fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutGap=\\\"8px\\\" fxLayoutGap.gt-xs=\\\"24px\\\">\\n              <mat-form-field fxFlex=\\\"auto\\\">\\n                <mat-label>E-Mail</mat-label>\\n                <input formControlName=\\\"email\\\" matInput required>\\n                <mat-hint align=\\\"end\\\">example@example.com</mat-hint>\\n              </mat-form-field>\\n\\n              <div fxFlex=\\\"auto\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"8px\\\">\\n                <mat-form-field class=\\\"vex-flex-form-field\\\" fxFlex=\\\"none\\\">\\n                  <mat-label>Code</mat-label>\\n                  <mat-select formControlName=\\\"phonePrefix\\\">\\n                    <mat-option *ngFor=\\\"let option of phonePrefixOptions\\\" [value]=\\\"option\\\">{{ option }}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"vex-flex-form-field\\\" fxFlex=\\\"auto\\\">\\n                  <mat-label>Phone Number</mat-label>\\n                  <input formControlName=\\\"phone\\\" matInput>\\n                  <mat-hint align=\\\"end\\\"></mat-hint>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button (click)=\\\"verticalStepper.reset()\\\" [disabled]=\\\"verticalAccountFormGroup.pristine\\\" color=\\\"primary\\\"\\n                    mat-button\\n                    type=\\\"button\\\">RESET\\n            </button>\\n            <button [disabled]=\\\"verticalAccountFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button matStepperNext>\\n              NEXT\\n            </button>\\n          </div>\\n        </form>\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"verticalPasswordFormGroup\\\">\\n        <form [formGroup]=\\\"verticalPasswordFormGroup\\\">\\n          <ng-template matStepLabel>Select a Password</ng-template>\\n\\n          <div class=\\\"title m-0\\\">Select a Password</div>\\n          <div class=\\\"subheading-1\\\">Enter your password you will use to log in.</div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Password</mat-label>\\n              <input [type]=\\\"passwordInputType\\\" formControlName=\\\"password\\\" matInput required>\\n              <button (click)=\\\"showPassword()\\\" *ngIf=\\\"passwordInputType === 'password'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibility\\\"></mat-icon>\\n              </button>\\n              <button (click)=\\\"hidePassword()\\\" *ngIf=\\\"passwordInputType === 'text'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibilityOff\\\"></mat-icon>\\n              </button>\\n              <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"auto\\\">\\n              <mat-label>Confirm Password</mat-label>\\n              <input [type]=\\\"passwordInputType\\\" formControlName=\\\"passwordConfirm\\\" matInput required>\\n              <button (click)=\\\"showPassword()\\\" *ngIf=\\\"passwordInputType === 'password'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibility\\\"></mat-icon>\\n              </button>\\n              <button (click)=\\\"hidePassword()\\\" *ngIf=\\\"passwordInputType === 'text'\\\" mat-icon-button matSuffix\\n                      type=\\\"button\\\">\\n                <mat-icon [icIcon]=\\\"icVisibilityOff\\\"></mat-icon>\\n              </button>\\n              <mat-hint>Please type in your password again.</mat-hint>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button color=\\\"primary\\\" mat-button matStepperPrevious type=\\\"button\\\">PREVIOUS</button>\\n            <button [disabled]=\\\"verticalPasswordFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button matStepperNext>\\n              NEXT\\n            </button>\\n          </div>\\n        </form>\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"verticalConfirmFormGroup\\\">\\n        <form [formGroup]=\\\"verticalConfirmFormGroup\\\">\\n          <ng-template matStepLabel>Confirm Creation</ng-template>\\n\\n          <div class=\\\"title m-0\\\">You're almost there!</div>\\n          <div class=\\\"subheading-1\\\">To finish registration, accept our terms of service and click on \\\"Create Account\\\".\\n          </div>\\n\\n          <div class=\\\"mt-4\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n            <mat-checkbox class=\\\"checkbox\\\" formControlName=\\\"terms\\\">\\n              I agree to the terms of service and the usual stuff. *\\n            </mat-checkbox>\\n          </div>\\n\\n          <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\n            <button color=\\\"primary\\\" mat-button matStepperPrevious type=\\\"button\\\">PREVIOUS</button>\\n            <button (click)=\\\"submit()\\\" [disabled]=\\\"verticalConfirmFormGroup.invalid\\\" color=\\\"primary\\\" mat-raised-button\\n                    matStepperNext>\\n              CREATE ACCOUNT\\n            </button>\\n          </div>\\n        </form>\\n\\n      </mat-step>\\n    </mat-vertical-stepper>\\n  </div>\\n</div>\\n\\n\"","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInRightAnimation(duration: number) {\r\n  return trigger('fadeInRight', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateX(-20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateX(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInRight400ms = fadeInRightAnimation(400);\r\n","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function scaleInAnimation(duration: number) {\r\n  return trigger('scaleIn', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'scale(0)'\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'scale(1)'\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const scaleIn400ms = scaleInAnimation(400);\r\n","import { animateChild, query, stagger, transition, trigger } from '@angular/animations';\r\n\r\nexport function staggerAnimation(timing: number) {\r\n  return trigger('stagger', [\r\n    transition('* => *', [ // each time the binding value changes\r\n      query('@fadeInUp, @fadeInRight, @scaleIn', stagger(timing, animateChild()), { optional: true }),\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const stagger80ms = staggerAnimation(80);\r\nexport const stagger60ms = staggerAnimation(60);\r\nexport const stagger40ms = staggerAnimation(40);\r\nexport const stagger20ms = staggerAnimation(20);\r\n","export default \".secondary-toolbar {\\n  background: var(--secondary-toolbar-background);\\n  height: var(--secondary-toolbar-height);\\n  margin-top: calc(var(--secondary-toolbar-height) * -1);\\n}\\n\\n.secondary-toolbar.fixed {\\n  width: var(--toolbar-width);\\n}\\n\\n.secondary-toolbar-placeholder {\\n  height: var(--secondary-toolbar-height);\\n}\\n\\n::ng-deep .is-mobile .fixed {\\n  width: 100%;\\n}\\n\\n::ng-deep body .fixed {\\n  width: calc(100% - var(--sidenav-width));\\n}\\n\\n::ng-deep vex-breadcrumbs {\\n  display: none;\\n}\\n\\n@media (min-width: 600px) {\\n  ::ng-deep vex-breadcrumbs {\\n    display: block;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21hcmNvL0Rlc2t0b3AvVGF4aS1mcm9udC9zcmMvQHZleC9jb21wb25lbnRzL3NlY29uZGFyeS10b29sYmFyL3NlY29uZGFyeS10b29sYmFyLmNvbXBvbmVudC5zY3NzIiwic3JjL0B2ZXgvY29tcG9uZW50cy9zZWNvbmRhcnktdG9vbGJhci9zZWNvbmRhcnktdG9vbGJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLCtDQUFBO0VBQ0EsdUNBQUE7RUFDQSxzREFBQTtBQ0NGOztBREVBO0VBQ0UsMkJBQUE7QUNDRjs7QURFQTtFQUNFLHVDQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSx3Q0FBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtBQ0NGOztBREVBO0VBQ0U7SUFDRSxjQUFBO0VDQ0Y7QUFDRiIsImZpbGUiOiJzcmMvQHZleC9jb21wb25lbnRzL3NlY29uZGFyeS10b29sYmFyL3NlY29uZGFyeS10b29sYmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlY29uZGFyeS10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tc2Vjb25kYXJ5LXRvb2xiYXItYmFja2dyb3VuZCk7XG4gIGhlaWdodDogdmFyKC0tc2Vjb25kYXJ5LXRvb2xiYXItaGVpZ2h0KTtcbiAgbWFyZ2luLXRvcDogY2FsYyh2YXIoLS1zZWNvbmRhcnktdG9vbGJhci1oZWlnaHQpICogLTEpO1xufVxuXG4uc2Vjb25kYXJ5LXRvb2xiYXIuZml4ZWQge1xuICB3aWR0aDogdmFyKC0tdG9vbGJhci13aWR0aCk7XG59XG5cbi5zZWNvbmRhcnktdG9vbGJhci1wbGFjZWhvbGRlciB7XG4gIGhlaWdodDogdmFyKC0tc2Vjb25kYXJ5LXRvb2xiYXItaGVpZ2h0KTtcbn1cblxuOjpuZy1kZWVwIC5pcy1tb2JpbGUgLmZpeGVkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbjo6bmctZGVlcCBib2R5IC5maXhlZCB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSB2YXIoLS1zaWRlbmF2LXdpZHRoKSk7XG59XG5cbjo6bmctZGVlcCB2ZXgtYnJlYWRjcnVtYnMge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcbiAgOjpuZy1kZWVwIHZleC1icmVhZGNydW1icyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn0iLCIuc2Vjb25kYXJ5LXRvb2xiYXIge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1zZWNvbmRhcnktdG9vbGJhci1iYWNrZ3JvdW5kKTtcbiAgaGVpZ2h0OiB2YXIoLS1zZWNvbmRhcnktdG9vbGJhci1oZWlnaHQpO1xuICBtYXJnaW4tdG9wOiBjYWxjKHZhcigtLXNlY29uZGFyeS10b29sYmFyLWhlaWdodCkgKiAtMSk7XG59XG5cbi5zZWNvbmRhcnktdG9vbGJhci5maXhlZCB7XG4gIHdpZHRoOiB2YXIoLS10b29sYmFyLXdpZHRoKTtcbn1cblxuLnNlY29uZGFyeS10b29sYmFyLXBsYWNlaG9sZGVyIHtcbiAgaGVpZ2h0OiB2YXIoLS1zZWNvbmRhcnktdG9vbGJhci1oZWlnaHQpO1xufVxuXG46Om5nLWRlZXAgLmlzLW1vYmlsZSAuZml4ZWQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuOjpuZy1kZWVwIGJvZHkgLmZpeGVkIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIHZhcigtLXNpZGVuYXYtd2lkdGgpKTtcbn1cblxuOjpuZy1kZWVwIHZleC1icmVhZGNydW1icyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICA6Om5nLWRlZXAgdmV4LWJyZWFkY3J1bWJzIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufSJdfQ== */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { ConfigService } from '../../services/config.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'vex-secondary-toolbar',\n  templateUrl: './secondary-toolbar.component.html',\n  styleUrls: ['./secondary-toolbar.component.scss']\n})\nexport class SecondaryToolbarComponent implements OnInit {\n\n  @Input() current: string;\n  @Input() crumbs: string[];\n\n  fixed$ = this.configService.config$.pipe(\n    map(config => config.toolbar.fixed)\n  );\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit() {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecondaryToolbarComponent } from './secondary-toolbar.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BreadcrumbsModule } from '../breadcrumbs/breadcrumbs.module';\nimport { ContainerModule } from '../../directives/container/container.module';\n\n\n@NgModule({\n  declarations: [SecondaryToolbarComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    IconModule,\n    RouterModule,\n    MatButtonModule,\n    MatIconModule,\n    BreadcrumbsModule,\n    ContainerModule\n  ],\n  exports: [SecondaryToolbarComponent]\n})\nexport class SecondaryToolbarModule {\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormWizardComponent } from './form-wizard.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormWizardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FormWizardRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VpL2Zvcm1zL2Zvcm0td2l6YXJkL2Zvcm0td2l6YXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport icDescription from '@iconify/icons-ic/twotone-description';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { stagger80ms } from '../../../../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\nimport { scaleIn400ms } from '../../../../../@vex/animations/scale-in.animation';\nimport { fadeInRight400ms } from '../../../../../@vex/animations/fade-in-right.animation';\nimport icVerticalSplit from '@iconify/icons-ic/twotone-vertical-split';\nimport icVisiblity from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\nimport icDoneAll from '@iconify/icons-ic/twotone-done-all';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport theme from '../../../../../@vex/utils/tailwindcss';\n\n@Component({\n  selector: 'vex-form-wizard',\n  templateUrl: './form-wizard.component.html',\n  styleUrls: ['./form-wizard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    stagger80ms,\n    fadeInUp400ms,\n    scaleIn400ms,\n    fadeInRight400ms\n  ]\n})\nexport class FormWizardComponent implements OnInit {\n\n  accountFormGroup: FormGroup;\n  passwordFormGroup: FormGroup;\n  confirmFormGroup: FormGroup;\n\n  verticalAccountFormGroup: FormGroup;\n  verticalPasswordFormGroup: FormGroup;\n  verticalConfirmFormGroup: FormGroup;\n\n  phonePrefixOptions = ['+1', '+27', '+44', '+49', '+61', '+91'];\n\n  passwordInputType = 'password';\n\n  icDoneAll = icDoneAll;\n  icDescription = icDescription;\n  icVerticalSplit = icVerticalSplit;\n  icVisibility = icVisiblity;\n  icVisibilityOff = icVisibilityOff;\n  icMoreVert = icMoreVert;\n\n  theme = theme;\n\n  constructor(private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    /**\n     * Horizontal Stepper\n     * @type {FormGroup}\n     */\n    this.accountFormGroup = this.fb.group({\n      username: [null, Validators.required],\n      name: [null, Validators.required],\n      email: [null, Validators.required],\n      phonePrefix: [this.phonePrefixOptions[3]],\n      phone: [],\n    });\n\n    this.passwordFormGroup = this.fb.group({\n      password: [\n        null,\n        Validators.compose(\n          [\n            Validators.required,\n            Validators.minLength(6)\n          ]\n        )\n      ],\n      passwordConfirm: [null, Validators.required]\n    });\n\n    this.confirmFormGroup = this.fb.group({\n      terms: [null, Validators.requiredTrue]\n    });\n\n    /**\n     * Vertical Stepper\n     * @type {FormGroup}\n     */\n    this.verticalAccountFormGroup = this.fb.group({\n      username: [null, Validators.required],\n      name: [null, Validators.required],\n      email: [null, Validators.required],\n      phonePrefix: [this.phonePrefixOptions[3]],\n      phone: [],\n    });\n\n    this.verticalPasswordFormGroup = this.fb.group({\n      password: [\n        null,\n        Validators.compose(\n          [\n            Validators.required,\n            Validators.minLength(6)\n          ]\n        )\n      ],\n      passwordConfirm: [null, Validators.required]\n    });\n\n    this.verticalConfirmFormGroup = this.fb.group({\n      terms: [null, Validators.requiredTrue]\n    });\n  }\n\n  showPassword() {\n    this.passwordInputType = 'text';\n    this.cd.markForCheck();\n  }\n\n  hidePassword() {\n    this.passwordInputType = 'password';\n    this.cd.markForCheck();\n  }\n\n  submit() {\n    this.snackbar.open('Hooray! You successfully created your account.', null, {\n      duration: 5000\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormWizardRoutingModule } from './form-wizard-routing.module';\nimport { FormWizardComponent } from './form-wizard.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { SecondaryToolbarModule } from '../../../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { BreadcrumbsModule } from '../../../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { ContainerModule } from '../../../../../@vex/directives/container/container.module';\nimport { ColorFadeModule } from '../../../../../@vex/pipes/color/color-fade.module';\n\n\n@NgModule({\n  declarations: [FormWizardComponent],\n  imports: [\n    CommonModule,\n    FormWizardRoutingModule,\n    MatSnackBarModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n    FlexLayoutModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    SecondaryToolbarModule,\n    MatSelectModule,\n    IconModule,\n    BreadcrumbsModule,\n    ContainerModule,\n    ColorFadeModule\n  ]\n})\nexport class FormWizardModule {\n}\n"],"sourceRoot":"webpack:///","file":"pages-ui-forms-form-wizard-form-wizard-module-es5.js"}