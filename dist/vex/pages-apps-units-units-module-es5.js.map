{"version":3,"sources":["node_modules/@iconify/icons-ic/twotone-cloud-download.js","node_modules/@iconify/icons-ic/twotone-delete.js","node_modules/@iconify/icons-ic/twotone-home.js","node_modules/@iconify/icons-ic/twotone-mail.js","node_modules/@iconify/icons-ic/twotone-more-vert.js","node_modules/@iconify/icons-ic/twotone-phone.js","node_modules/@iconify/icons-ic/twotone-print.js","src/app/pages/apps/units/add-units/add-units.component.html","src/app/pages/apps/units/units.component.html","src/@vex/animations/fade-in-up.animation.ts","src/@vex/animations/stagger.animation.ts","src/@vex/components/breadcrumbs/breadcrumb/breadcrumb.component.ts","src/@vex/components/breadcrumbs/breadcrumbs.component.ts","src/@vex/components/breadcrumbs/breadcrumbs.module.ts","src/app/pages/apps/units/add-units/add-units.component.scss","src/app/pages/apps/units/add-units/add-units.component.ts","src/app/pages/apps/units/add-units/add-units.module.ts","src/app/pages/apps/units/units-routing.module.ts","src/app/pages/apps/units/units.component.scss","src/app/pages/apps/units/units.component.ts","src/app/pages/apps/units/units.module.ts","src/app/shared/models/units.ts"],"names":[],"mappings":"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","sourcesContent":["var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M19.21 12.04l-1.53-.11l-.3-1.5A5.484 5.484 0 0 0 12 6C9.94 6 8.08 7.14 7.12 8.96l-.5.95l-1.07.11A3.99 3.99 0 0 0 2 14c0 2.21 1.79 4 4 4h13c1.65 0 3-1.35 3-3c0-1.55-1.22-2.86-2.79-2.96zM12 17l-4-4h2.55v-3h2.91v3H16l-4 4z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5c0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4c0-2.05 1.53-3.76 3.56-3.97l1.07-.11l.5-.95A5.469 5.469 0 0 1 12 6c2.62 0 4.88 1.86 5.39 4.43l.3 1.5l1.53.11A2.98 2.98 0 0 1 22 15c0 1.65-1.35 3-3 3zm-5.55-8h-2.9v3H8l4 4l4-4h-2.55z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M8 9h8v10H8z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3zm5 15h-2v-6H9v6H7v-7.81l5-4.5l5 4.5V18z\\\" fill=\\\"currentColor\\\"/><path opacity=\\\".3\\\" d=\\\"M7 10.19V18h2v-6h6v6h2v-7.81l-5-4.5z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M20 6H4l8 4.99zM4 8v10h16V8l-8 5z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 2l-8 4.99L4 6h16zm0 12H4V8l8 5l8-5v10z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2s-2 .9-2 2s.9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M19 17.47c-.88-.07-1.75-.22-2.6-.45l-1.19 1.19c1.2.41 2.48.67 3.8.75v-1.49zM5.03 5c.09 1.32.35 2.59.75 3.8l1.2-1.2c-.23-.84-.38-1.71-.44-2.6H5.03z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M9.07 7.57A11.36 11.36 0 0 1 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1c0 9.39 7.61 17 17 17c.55 0 1-.45 1-1v-3.49c0-.55-.45-1-1-1c-1.24 0-2.45-.2-3.57-.57a.84.84 0 0 0-.31-.05c-.26 0-.51.1-.71.29l-2.2 2.2a15.149 15.149 0 0 1-6.59-6.59l2.2-2.2c.28-.28.36-.67.25-1.02zm7.33 9.45c.85.24 1.72.39 2.6.45v1.49c-1.32-.09-2.59-.35-3.8-.75l1.2-1.19zM5.79 8.8c-.41-1.21-.67-2.48-.76-3.8h1.5a13 13 0 0 0 .46 2.59L5.79 8.8z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M8 5h8v3H8z\\\" fill=\\\"currentColor\\\"/><circle cx=\\\"18\\\" cy=\\\"11.5\\\" r=\\\"1\\\" fill=\\\"currentColor\\\"/><path d=\\\"M19 8h-1V3H6v5H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zM8 5h8v3H8V5zm8 14H8v-4h8v4zm4-4h-2v-2H6v2H4v-4c0-.55.45-1 1-1h14c.55 0 1 .45 1 1v4z\\\" fill=\\\"currentColor\\\"/><path opacity=\\\".3\\\" d=\\\"M6 13h12v2h2v-4c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v4h2v-2zm12-2.5c.55 0 1 .45 1 1s-.45 1-1 1s-1-.45-1-1s.45-1 1-1z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","export default \"<!--<form (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"form\\\">-->\\n    <form class=\\\"needs-validation\\\" #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"save(clientForm)\\\" [formGroup]=\\\"form\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-dialog-title>\\n          \\n      \\n          <h2 *ngIf=\\\"form.get('placa').value || form.get('localidad').value\\\"\\n              class=\\\"headline m-0\\\"\\n              fxFlex=\\\"auto\\\">{{ form.get('placa').value + ' ' + form.get('localidad').value }}</h2>\\n          <h2 *ngIf=\\\"!form.get('placa').value && !form.get('localidad').value\\\"\\n              class=\\\"headline m-0\\\"\\n              fxFlex=\\\"auto\\\">Nueva unidad</h2>\\n      \\n          <button [matMenuTriggerFor]=\\\"settingsMenu\\\" class=\\\"text-secondary\\\" mat-icon-button type=\\\"button\\\">\\n            <mat-icon [icIcon]=\\\"icMoreVert\\\"></mat-icon>\\n          </button>\\n      \\n          <button class=\\\"text-secondary\\\" mat-dialog-close mat-icon-button type=\\\"button\\\">\\n            <mat-icon [icIcon]=\\\"icClose\\\"></mat-icon>\\n          </button>\\n        </div>\\n      \\n        <mat-divider class=\\\"-mx-6 text-border\\\"></mat-divider>\\n      \\n        <mat-dialog-content fxLayout=\\\"column\\\">\\n          <div class=\\\"flex flex-col sm:flex-row\\\">\\n            <mat-form-field class=\\\"mt-6 flex-auto\\\">\\n              <mat-label>Placa</mat-label>\\n              <!--<input cdkFocusInitial formControlName=\\\"firstName\\\" matInput>-->\\n              <input cdkFocusInitial formControlName=\\\"placa\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"placa\\\" name=\\\"placa\\\" [(ngModel)]=\\\"addUnits.placa\\\" matInput>\\n      \\n              <mat-icon [icIcon]=\\\"icPerson\\\" class=\\\"mr-3\\\" matPrefix></mat-icon>\\n            </mat-form-field>\\n      \\n            <mat-form-field class=\\\"sm:mt-6 sm:ml-6 flex-auto\\\">\\n              <mat-label>Numero unidad</mat-label>\\n              <!--<input cdkFocusInitial formControlName=\\\"lastName\\\" matInput>-->\\n              <input cdkFocusInitial formControlName=\\\"noUnidad\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"noUnidad\\\" name=\\\"noUnidad\\\" [(ngModel)]=\\\"addUnits.noUnidad\\\" matInput>\\n      \\n              <mat-icon [icIcon]=\\\"icPerson\\\" class=\\\"mr-3\\\" matPrefix></mat-icon>\\n            </mat-form-field>\\n          </div>\\n      \\n          <mat-form-field class=\\\"flex-auto\\\">\\n            <mat-label>Serie motor</mat-label>\\n            <!--<input formControlName=\\\"street\\\" matInput>-->\\n            <input cdkFocusInitial formControlName=\\\"serieMotor\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"serieMotor\\\" name=\\\"serieMotor\\\" [(ngModel)]=\\\"addUnits.serieMotor\\\" matInput>\\n      \\n            <mat-icon [icIcon]=\\\"icEditLocation\\\" class=\\\"mr-3\\\" matPrefix></mat-icon>\\n          </mat-form-field>\\n      \\n          <div class=\\\"flex flex-col sm:flex-row\\\">\\n            <mat-form-field class=\\\"flex-auto\\\">\\n              <mat-label>Folio concesion</mat-label>\\n              <!--<input formControlName=\\\"zipcode\\\" matInput>-->\\n              <input cdkFocusInitial formControlName=\\\"folioConcesion\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"folioConcesion\\\" name=\\\"folioConcesion\\\" [(ngModel)]=\\\"addUnits.folioConcesion\\\" matInput>\\n      \\n              <mat-icon [icIcon]=\\\"icMyLocation\\\" class=\\\"mr-3\\\" matPrefix></mat-icon>\\n            </mat-form-field>\\n      \\n            <mat-form-field class=\\\"sm:ml-6 flex-auto\\\">\\n              <mat-label>Localidad</mat-label>\\n              <!--<input formControlName=\\\"dia\\\" matInput>-->\\n              <input cdkFocusInitial formControlName=\\\"localidad\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"localidad\\\" name=\\\"localidad\\\" [(ngModel)]=\\\"addUnits.localidad\\\" matInput>\\n      \\n              <mat-icon [icIcon]=\\\"icPerson\\\" class=\\\"mr-3\\\" matPrefix></mat-icon>\\n            </mat-form-field>\\n          </div>\\n      \\n          <div class=\\\"flex flex-col sm:flex-row\\\">\\n            \\n            <mat-form-field class=\\\"flex-auto\\\">\\n              <mat-label>Municipio</mat-label>\\n              <!--<input formControlName=\\\"ciudad\\\" matInput>-->\\n              <input cdkFocusInitial formControlName=\\\"municipio\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"municipio\\\" name=\\\"municipio\\\" [(ngModel)]=\\\"addUnits.municipio\\\" matInput>\\n      \\n              <mat-icon [icIcon]=\\\"icLocationCity\\\" class=\\\"mr-3\\\" matPrefix></mat-icon>\\n            </mat-form-field>\\n      \\n          </div>\\n      \\n          <mat-form-field class=\\\"flex-auto\\\">\\n            <mat-label>Estado</mat-label>\\n            <!--<input formControlName=\\\"phoneNumber\\\" matInput>-->\\n            <input cdkFocusInitial formControlName=\\\"estado\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"estado\\\" name=\\\"estado\\\" [(ngModel)]=\\\"addUnits.estado\\\" matInput>\\n      \\n            <mat-icon [icIcon]=\\\"icPhone\\\" class=\\\"mr-3\\\" matPrefix></mat-icon>\\n          </mat-form-field>\\n      \\n        </mat-dialog-content>\\n      \\n        <mat-dialog-actions align=\\\"end\\\">\\n          <button mat-button mat-dialog-close type=\\\"button\\\">CANCELAR</button>\\n          <button *ngIf=\\\"isCreateMode()\\\" color=\\\"primary\\\" mat-button type=\\\"submit\\\">CREAR CLIENTE</button>\\n          <button *ngIf=\\\"isUpdateMode()\\\" color=\\\"primary\\\" mat-button type=\\\"submit\\\">ACTUALIZAR CLIENTE</button>\\n        </mat-dialog-actions>\\n      </form>\\n      \\n      <mat-menu #settingsMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" yPosition=\\\"below\\\">\\n        <button mat-menu-item>\\n          <mat-icon [icIcon]=\\\"icPrint\\\"></mat-icon>\\n          <span>Imprimir</span>\\n        </button>\\n      \\n        <button mat-menu-item>\\n          <mat-icon [icIcon]=\\\"icDownload\\\"></mat-icon>\\n          <span>Exportar</span>\\n        </button>\\n      \\n        <button mat-menu-item>\\n          <mat-icon [icIcon]=\\\"icDelete\\\"></mat-icon>\\n          <span>Borrar</span>\\n        </button>\\n      </mat-menu>\\n      \"","export default \"<vex-page-layout>\\n\\n  <vex-page-layout-header class=\\\"pb-16\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\n    <div [class.container]=\\\"layoutCtrl.value === 'boxed'\\\"\\n         [class.px-gutter]=\\\"layoutCtrl.value === 'fullwidth'\\\"\\n         class=\\\"w-full flex flex-col sm:flex-row justify-between\\\">\\n      <div>\\n        <h1 class=\\\"title mt-0 mb-1\\\">Registro de Unidades</h1>\\n        <vex-breadcrumbs [crumbs]=\\\"['Clientes', 'Tabla de Clientes']\\\"></vex-breadcrumbs>\\n      </div>\\n\\n      <mat-button-toggle-group [formControl]=\\\"layoutCtrl\\\" class=\\\"mt-4 sm:mt-0\\\">\\n        <mat-button-toggle value=\\\"boxed\\\">REDUCIR</mat-button-toggle>\\n        <mat-button-toggle value=\\\"fullwidth\\\">AMPLIAR</mat-button-toggle>\\n      </mat-button-toggle-group>\\n    </div>\\n  </vex-page-layout-header>\\n\\n  <vex-page-layout-content [class.container]=\\\"layoutCtrl.value === 'boxed'\\\"\\n                           [class.px-gutter]=\\\"layoutCtrl.value === 'fullwidth'\\\"\\n                           class=\\\"-mt-6\\\">\\n\\n    <div class=\\\"card overflow-auto -mt-16\\\">\\n      <div class=\\\"bg-app-bar px-6 h-16 border-b sticky left-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n        <h2 class=\\\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\\\" fxFlex=\\\"none\\\" fxHide.xs>\\n          <span *ngIf=\\\"selection.isEmpty()\\\">Unidades</span>\\n          <span *ngIf=\\\"selection.hasValue()\\\">{{ selection.selected.length }}\\n            Unidades<span *ngIf=\\\"selection.selected.length > 1\\\">s</span> Seleccionado</span>\\n        </h2>\\n\\n        <div *ngIf=\\\"selection.hasValue()\\\" class=\\\"mr-4 pr-4 border-r\\\" fxFlex=\\\"none\\\">\\n          <button (click)=\\\"removeAt(selection.selected)\\\"\\n                  color=\\\"primary\\\"\\n                  mat-icon-button\\n                  matTooltip=\\\"Borrar Selecionado\\\"\\n                  type=\\\"button\\\">\\n            <mat-icon [icIcon]=\\\"icDelete\\\"></mat-icon>\\n          </button>\\n\\n          <button color=\\\"primary\\\" mat-icon-button matTooltip=\\\"Otra Acción\\\" type=\\\"button\\\">\\n            <mat-icon [icIcon]=\\\"icFolder\\\"></mat-icon>\\n          </button>\\n        </div>\\n\\n        <div class=\\\"bg-card rounded-full border px-4\\\"\\n             fxFlex=\\\"400px\\\"\\n             fxFlex.lt-md=\\\"auto\\\"\\n             fxHide.xs\\n             fxLayout=\\\"row\\\"\\n             fxLayoutAlign=\\\"start center\\\">\\n          <ic-icon [icIcon]=\\\"icSearch\\\" size=\\\"20px\\\"></ic-icon>\\n          <input [formControl]=\\\"searchCtrl\\\"\\n                 class=\\\"px-4 py-3 border-0 outline-none w-full bg-transparent\\\"\\n                 placeholder=\\\"Buscar...\\\"\\n                 type=\\\"search\\\">\\n        </div>\\n\\n        <span fxFlex></span>\\n\\n        <button class=\\\"ml-4\\\" fxFlex=\\\"none\\\" fxHide.gt-xs mat-icon-button type=\\\"button\\\">\\n          <mat-icon [icIcon]=\\\"icSearch\\\"></mat-icon>\\n        </button>\\n\\n        <!--<button [matMenuTriggerFor]=\\\"columnFilterMenu\\\"\\n                class=\\\"ml-4\\\"\\n                fxFlex=\\\"none\\\"\\n                mat-icon-button\\n                matTooltip=\\\"Filtrar Columnas\\\"\\n                type=\\\"button\\\">\\n          <mat-icon [icIcon]=\\\"icFilterList\\\"></mat-icon>\\n        </button>-->\\n\\n        <button (click)=\\\"createCustomer()\\\"\\n                class=\\\"ml-4\\\"\\n                color=\\\"primary\\\"\\n                fxFlex=\\\"none\\\"\\n                mat-mini-fab\\n                matTooltip=\\\"Agregar Estableciento\\\"\\n                type=\\\"button\\\">\\n          <mat-icon [icIcon]=\\\"icAdd\\\"></mat-icon>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"example-container mat-elevation-z8\\\">\\n        <mat-table #table [dataSource]=\\\"dataSource\\\">\\n      \\n          <!--- Note that these columns can be defined in any order.\\n                The actual rendered columns are set as a property on the row definition\\\" -->\\n      \\n          <!--==========Id Column===============\\n          <ng-container matColumnDef=\\\"id\\\">\\n            <mat-header-cell *matHeaderCellDef> id </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </mat-cell>\\n          </ng-container>-->\\n          \\n          <!--==========direccion Column===============-->\\n          <ng-container matColumnDef=\\\"estado\\\">\\n            <mat-header-cell *matHeaderCellDef> Estado </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.estado}} </mat-cell>\\n          </ng-container>\\n\\n          <!--==========telefono Column===============-->\\n          <ng-container matColumnDef=\\\"folioConcesion\\\">\\n            <mat-header-cell *matHeaderCellDef> Folio concesion </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.folioConcesion}} </mat-cell>\\n          </ng-container>\\n\\n          <!--==========razonSocial Column===============-->\\n          <ng-container matColumnDef=\\\"localidad\\\">\\n            <mat-header-cell *matHeaderCellDef> Localidad </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.localidad}} </mat-cell>\\n          </ng-container>\\n\\n          <!--==========rfc Column===============-->\\n          <ng-container matColumnDef=\\\"municipio\\\">\\n            <mat-header-cell *matHeaderCellDef> Municipio </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.municipio}} </mat-cell>\\n          </ng-container>\\n\\n          <!--==========tipo Column===============-->\\n          <ng-container matColumnDef=\\\"noUnidad\\\">\\n            <mat-header-cell *matHeaderCellDef> Numero unidad </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.noUnidad}} </mat-cell>\\n          </ng-container>\\n\\n          <!--==========Nombre Column===============-->\\n          <ng-container matColumnDef=\\\"placa\\\">\\n            <mat-header-cell *matHeaderCellDef> Placa </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.placa}} </mat-cell>\\n          </ng-container>\\n      \\n          <!--==========email Column===============-->\\n          <ng-container matColumnDef=\\\"serieMotor\\\">\\n            <mat-header-cell *matHeaderCellDef> Serie motor </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.serieMotor}} </mat-cell>\\n          </ng-container>\\n        \\n          <!--==========Update Column=================-->\\n          <ng-container matColumnDef=\\\"editar\\\" >\\n            <th mat-header-cell *matHeaderCellDef> Editar </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\"  > \\n                <button  (click)=\\\"updateCustomer(element)\\\" >\\n                  \\n                  <mat-icon [icIcon]=\\\"icEdit\\\"></mat-icon>\\n                </button>\\n            </td>\\n          </ng-container>\\n          \\n          <!--==========Delete Column=================-->\\n          <ng-container matColumnDef=\\\"borrar\\\" >\\n            <th mat-header-cell *matHeaderCellDef> Borrar </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\" > \\n                <button (click)=\\\"removeAt(element.$key)\\\"><!--Tambien sirve para obtener datos espesificos de la fila seleccionada-->\\n                  <mat-icon [icIcon]=\\\"icDelete\\\"></mat-icon>\\n                </button>\\n            </td>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n      </div>\\n\\n      <mat-paginator [pageSizeOptions]=\\\"pageSizeOptions\\\" [pageSize]=\\\"pageSize\\\" class=\\\"sticky left-0\\\"></mat-paginator>\\n    </div>\\n\\n  </vex-page-layout-content>\\n\\n</vex-page-layout>\\n\\n<!--<mat-menu #columnFilterMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" yPosition=\\\"below\\\">\\n  <button (click)=\\\"toggleColumnVisibility(column, $event)\\\" *ngFor=\\\"let column of displayedColumns\\\"\\n          class=\\\"checkbox-customer mat-menu-customer\\\">\\n    <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" [(ngModel)]=\\\"column.visible\\\" color=\\\"primary\\\">\\n      {{ column.label }}\\n    </mat-checkbox>\\n  </button>\\n</mat-menu>-->\\n\\n<mat-menu #actionsMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" yPosition=\\\"below\\\">\\n  <ng-template let-customer=\\\"customer\\\" matMenuContent>\\n    <button (click)=\\\"updateCustomer(customer)\\\" mat-menu-item>\\n      <mat-icon [icIcon]=\\\"icEdit\\\"></mat-icon>\\n      <span>Modificar</span>\\n    </button>\\n    <button (click)=\\\"removeAt(customer)\\\" mat-menu-item>\\n      <mat-icon [icIcon]=\\\"icDelete\\\"></mat-icon>\\n      <span>Borrar</span>\\n    </button>\\n  </ng-template>\\n</mat-menu>\\n\"","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","import { animateChild, query, stagger, transition, trigger } from '@angular/animations';\r\n\r\nexport function staggerAnimation(timing: number) {\r\n  return trigger('stagger', [\r\n    transition('* => *', [ // each time the binding value changes\r\n      query('@fadeInUp, @fadeInRight, @scaleIn', stagger(timing, animateChild()), { optional: true }),\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const stagger80ms = staggerAnimation(80);\r\nexport const stagger60ms = staggerAnimation(60);\r\nexport const stagger40ms = staggerAnimation(40);\r\nexport const stagger20ms = staggerAnimation(20);\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vex-breadcrumb',\n  template: `\n      <ng-content></ng-content>\n  `,\n  styles: [],\n  host: {\n    class: 'vex-breadcrumb body-2 text-hint leading-none hover:text-primary-500 no-underline trans-ease-out ltr:mr-2 rtl:ml-2'\n  }\n})\nexport class BreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport icHome from '@iconify/icons-ic/twotone-home';\r\nimport { trackByValue } from '../../utils/track-by';\r\n\r\n@Component({\r\n  selector: 'vex-breadcrumbs',\r\n  template: `\r\n      <div class=\"flex items-center\">\r\n          <vex-breadcrumb>\r\n              <a [routerLink]=\"['/']\">\r\n                  <ic-icon [icon]=\"icHome\" inline=\"true\" size=\"20px\"></ic-icon>\r\n              </a>\r\n          </vex-breadcrumb>\r\n          <ng-container *ngFor=\"let crumb of crumbs; trackBy: trackByValue\">\r\n              <div class=\"w-1 h-1 bg-gray-300 rounded-full ltr:mr-2 rtl:ml-2\"></div>\r\n              <vex-breadcrumb>\r\n                  <a [routerLink]=\"[]\">{{ crumb }}</a>\r\n              </vex-breadcrumb>\r\n          </ng-container>\r\n      </div>\r\n  `\r\n})\r\nexport class BreadcrumbsComponent implements OnInit {\r\n\r\n  @Input() crumbs: string[] = [];\r\n\r\n  trackByValue = trackByValue;\r\n  icHome = icHome;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { IconModule } from '@visurel/iconify-angular';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatIconModule,\r\n    FlexLayoutModule,\r\n    IconModule\r\n  ],\r\n  declarations: [BreadcrumbsComponent, BreadcrumbComponent],\r\n  exports: [BreadcrumbsComponent]\r\n})\r\nexport class BreadcrumbsModule {\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FwcHMvdW5pdHMvYWRkLXVuaXRzL2FkZC11bml0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n//import { Customer } from '../interfaces/customer.model';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport icPrint from '@iconify/icons-ic/twotone-print';\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icPerson from '@iconify/icons-ic/twotone-person';\nimport icMyLocation from '@iconify/icons-ic/twotone-my-location';\nimport icLocationCity from '@iconify/icons-ic/twotone-location-city';\nimport icEditLocation from '@iconify/icons-ic/twotone-edit-location';\n\nimport { NgForm } from '@angular/forms';\nimport { UnitsService } from '../../../../shared/services/units.services';\nimport { Units } from '../../../../shared/models/units';\n\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { firestore } from 'firebase';\nimport { StorageService } from '../../../../shared/services/storage/storage.service';\n\ndeclare var toastr: any;\ndeclare var $: any;\n@Component({\n  selector: 'vex-add-units',\n  templateUrl: './add-units.component.html',\n  styleUrls: ['./add-units.component.scss']\n})\nexport class AddUnitsComponent implements OnInit {\n\n  addUnits: Units = new Units();\n  clientList: Units[];\n  clientObject: Units;\n  loading = false;\n\n  static id = 1;\n\n  form: FormGroup;\n  mode: 'create' | 'update' = 'create';\n\n  icMoreVert = icMoreVert;\n  icClose = icClose;\n\n  icPrint = icPrint;\n  icDownload = icDownload;\n  icDelete = icDelete;\n\n  icPerson = icPerson;\n  icMyLocation = icMyLocation;\n  icLocationCity = icLocationCity;\n  icEditLocation = icEditLocation;\n  icPhone = icPhone;\n  client: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) \n    public defaults: any,\n    private dialogRef: MatDialogRef<AddUnitsComponent>,\n    private fb: FormBuilder,\n    private firestore: AngularFirestore,\n    private storageService: StorageService,\n    private unitService: UnitsService\n  ) { }\n\n  ngOnInit() {\n    if(this.storageService.getSession(\"$key\")!=null){\n      this.addUnits = this.storageService.getSession(\"mydata\")     \n    }\n\n    if (this.defaults) {\n      this.mode = 'update';\n    } else {\n      this.defaults = {} as Units;\n    }\n\n    const newId = this.firestore.createId();\n    this.storageService.setSession(\"mykey\", newId)\n\n    this.form = this.fb.group({\n      $key: newId,\n      id: [AddUnitsComponent.id++],\n      estado: [this.defaults.estado || ''],\n      folioConcesion: [this.defaults.folioConcesion || ''],\n      localidad: [this.defaults.localidad || ''],\n      municipio: [this.defaults.municipio || ''],\n      noUnidad: [this.defaults.noUnidad || ''],\n      placa: [this.defaults.placa || ''],\n      serieMotor: [this.defaults.serieMotor || ''],\n    });\n  }\n\n  save(clientForm: NgForm) {\n    if (this.mode === 'create') {\n      this.addClient(clientForm);\n    } else if (this.mode === 'update') {\n      this.updateCustomers();\n    }\n  }\n\n  addClient(clientForm: NgForm) {\n    this.unitService.postUnits(clientForm.value);\n    this.createCustomer();\n    alert(\"cliente guardado\")\n\n  }\n\n  updateCustomers(){\n    if(this.storageService.getSession(\"$key\")!=null){\n      //var value = new AddEstablishment\n        var values = { \n          estado: this.addUnits.estado,\n          folioConcesion: this.addUnits.folioConcesion,\n          localidad: this.addUnits.localidad,\n          municipio: this.addUnits.municipio,\n          noUnidad: this.addUnits.noUnidad,\n          placa: this.addUnits.placa,\n          serieMotor: this.addUnits.serieMotor,\n        }\n  \n        const customer = this.form.value;  \n        customer.estado = String(values.estado)\n        customer.folioConcesion = Number(values.folioConcesion)\n        customer.localidad = String(values.localidad)\n        customer.municipio = String(values.municipio)\n        customer.noUnidad = Number(values.noUnidad)\n        customer.placa= String(values.placa)\n        customer.serieMotor = Number(values.serieMotor)\n\n        this.unitService.updateUnits(values)\n        this.updateCustomer()\n        console.log('print value::'+ JSON.stringify(customer));\n      }else{\n        console.log('no entro')\n      }\n  }\n\n  createCustomer() {\n    const customer = this.form.value;\n\n    if (!customer.imageSrc) {\n      customer.imageSrc = 'assets/img/avatars/1.jpg';\n    }\n\n    this.dialogRef.close(customer);\n  }\n\n  updateCustomer() {\n    const customer = this.form.value;\n    customer.id = this.defaults.id;\n\n    this.dialogRef.close(customer);\n  }\n\n  isCreateMode() {\n    return this.mode === 'create';\n  }\n\n  isUpdateMode() {\n    return this.mode === 'update';\n  }\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { AddUnitsComponent } from './add-units.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { IconModule } from '@visurel/iconify-angular';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatMenuModule,\r\n    IconModule,\r\n    MatDividerModule\r\n  ],\r\n  declarations: [AddUnitsComponent],\r\n  entryComponents: [AddUnitsComponent],\r\n  exports: [AddUnitsComponent]\r\n})\r\nexport class AddUnitsModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { VexRoutes } from '../../../../@vex/interfaces/vex-route.interface';\nimport { UnitsComponent } from './units.component';\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: UnitsComponent,\n    data: {\n      toolbarShadowEnabled: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UnitsRoutingModule {\n}\n","export default \"table {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21hcmNvL0Rlc2t0b3AvVGF4aS1mcm9udC9zcmMvYXBwL3BhZ2VzL2FwcHMvdW5pdHMvdW5pdHMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2FwcHMvdW5pdHMvdW5pdHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hcHBzL3VuaXRzL3VuaXRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn0iLCJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","import { Observable, of, ReplaySubject, identity } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { branchData, branchLabels } from '../../../../static-data/branch-data';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\nimport icFolder from '@iconify/icons-ic/twotone-folder';\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\nimport { stagger40ms } from '../../../../@vex/animations/stagger.animation';\nimport { FormControl } from '@angular/forms';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\nimport { MatSelectChange } from '@angular/material/select';\nimport theme from '../../../../@vex/utils/tailwindcss';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icMail from '@iconify/icons-ic/twotone-mail';\nimport icMap from '@iconify/icons-ic/twotone-map';\n\nimport {DataSource} from '@angular/cdk/collections';\nimport { Component, AfterViewInit, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { UnitsService } from '../../../shared/services/units.services';\nimport { Units } from '../../../shared/models/units';\nimport { TableColumn } from '../../../../@vex/interfaces/table-column.interface'; \nimport { StorageService } from '../../../shared/services/storage/storage.service';\nimport { AddUnitsComponent } from './add-units/add-units.component';\n\n@Component({\n  selector: 'vex-units',\n  templateUrl: './units.component.html',\n  styleUrls: ['./units.component.scss'],\n  animations: [\n    fadeInUp400ms,\n    stagger40ms\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard'\n      } as MatFormFieldDefaultOptions\n    }\n  ]\n})\nexport class UnitsComponent implements OnInit, AfterViewInit {\n\n  testList: Units[];\n  testObject: Units;\n\n  items: Array<any>;\n\n  displayedColumns= [\n    'placa',\n    'noUnidad',\n    'serieMotor',\n    'folioConcesion',\n    'localidad',\n    'municipio',\n    'estado',\n    'editar',\n    'borrar'\n  ];\n\n  dataSource: any = new CustomerDataSource(this.unitService);\n  //dataSource:any = new EstablishmentDataSource(this.establishmentService);\n\n  element\n\n  layoutCtrl = new FormControl('boxed');\n\n\n  subject$: ReplaySubject<Units[]> = new ReplaySubject<Units[]>(1);\n  data$: Observable<Units[]> = this.subject$.asObservable();\n  customers: Units[];\n\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 20, 50];\n  //dataSource: MatTableDataSource<AddEstablishment> | null;\n  selection = new SelectionModel<Units>(true, []);\n  searchCtrl = new FormControl();\n\n\n  icPhone = icPhone;\n  icMail = icMail;\n  icMap = icMap;\n  icEdit = icEdit;\n  icSearch = icSearch;\n  icDelete = icDelete;\n  icAdd = icAdd;\n  icFilterList = icFilterList;\n  icMoreHoriz = icMoreHoriz;\n  icFolder = icFolder;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  //clientService: any;\n\n  constructor(\n    private dialog: MatDialog,\n    private unitService: UnitsService,\n    private storageService: StorageService\n  ) { }\n\n  ngOnInit() {\n    this.dataSource.connect().subscribe(customers => {\n      console.log(customers )\n      this.subject$.next(JSON.parse(JSON.stringify(customers)));\n      this.items = customers;\n      //console.log(\"printcust :: \"+customers)\n    });\n\n    this.data$.pipe(\n      filter<Units[]>(Boolean)\n    ).subscribe(customers => {\n      this.customers = customers;\n      this.dataSource.connect().toPromise = customers;\n    });\n\n    this.searchCtrl.valueChanges.pipe(\n      untilDestroyed(this)\n    ).subscribe(value => this.onFilterChange(value));\n  }\n\n  ngAfterViewInit() {\n        //this.dataSours.paginator = this.paginator;\n   // this.dataSours.sort = this.sort;\n   \t //this.spinnerService.show();\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    //this.dataSource.filter = filterValue;\n  }\n\n  createCustomer() {\n    this.dialog.open(AddUnitsComponent).afterClosed().subscribe((units: Units) => {\n      \n      if (units) {\n        \n        //this.branchs.unshift(new AddEstablishment(addestablishment));\n        //this.subject$.next(this.branchs);\n      }\n    });\n  }\n\n  updateCustomer(i: Units) {\n    console.log(i);\n    this.storageService.setSession(\"mydata\", i);\n    this.storageService.setSession(\"$key\", i.$key)\n    \n\n    this.dialog.open(AddUnitsComponent, {\n      \n      data: i\n      \n    }).afterClosed().subscribe(updatedCustomer => {\n      \n      if (updatedCustomer) {    \n       const index = this.customers.findIndex((existingCustomer) => existingCustomer.id === updatedCustomer.id);\n       this.customers[index] = new Units();\n        this.subject$.next(this.customers);\n      }\n    });\n\n    \n\n  }\n  removeAt(i){     \n    console.log(i);\n\n      this.unitService.deleteUnits(i);\n      \n      this.customers.splice(this.customers.findIndex((existingCustomer) => existingCustomer.id === i.id), 1);\n      this.selection.deselect(i);\n      this.subject$.next(this.customers);\n  }\n\n\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\n    return column.property;\n  }\n  onLabelChange(change: MatSelectChange, row: Units) {\n    const index = this.customers.findIndex(c => c === row);\n   this.customers[index].placa = change.value;\n    this.subject$.next(this.customers);\n  }\n  ngOnDestroy() {\n  }\n\n\n\n\n  // getAllMarketing() {\n\t// \t// this.spinnerService.show();\n\t// \t//this.loading = true;\n\t// \tconst x = this.clientService.getClient();\n\t// \tx.snapshotChanges().subscribe(\n\t// \t\t(marketingtest) => {\n\t// \t\t\t//this.loading = false;\n\t// \t\t\t// this.spinnerService.hide();\n\t// \t\t\tthis.testList = [];\n\t// \t\t\tmarketingtest.forEach((element) => {\n\t// \t\t\t\t//con y = element.payload.doc.data(). ..toJSON();\n\t// \t\t\t\t//y['$key'] = element.key;\n\t// \t\t\t\tthis.testObject = element.payload.doc.data();\n\t// \t\t\t\tthis.testObject.$key = element.payload.doc.id; \n\t// \t\t\t\tconsole.log(\"data : \" + JSON.stringify(this.testObject)); \n  //         this.testList.push(this.testObject as Client);\n          \n\t// \t\t\t});\n\t// \t\t},\n\t// \t\t(err) => {\n  //       alert(err)\n\t// \t\t\t//this.toastrService.error('Error while fetching Marketing', err);\n\t// \t\t}\n\t// \t);\n\t// }\n}\n\nexport class CustomerDataSource extends DataSource<any> {\n\n  customerList: Units[];\n  customerObj: Units;\n\n  constructor(private unitService: UnitsService) {\n  super()\n  }\n\n  connect() {\n    return this.unitService.getAllUnits() \n  }\n\n  disconnect() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PageLayoutModule } from '../../../../@vex/components/page-layout/page-layout.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BreadcrumbsModule } from '../../../../@vex/components/breadcrumbs/breadcrumbs.module';\n\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ContainerModule } from '../../../../@vex/directives/container/container.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ColorFadeModule } from '../../../../@vex/pipes/color/color-fade.module';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { UnitsComponent } from './units.component';\nimport { UnitsRoutingModule } from './units-routing.module';\n//import { AddUnitsComponent } from './add-units/add-units.component';\nimport { AddUnitsModule } from './add-units/add-units.module';\n//import { AlmacenCreateUpdateModule } from './almacen-create-update/almacen-create-update.module';\n\n\n@NgModule({\n  declarations: [UnitsComponent],\n  imports: [\n    CommonModule,\n    UnitsRoutingModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    //AlmacenCreateUpdateModule,\n    AddUnitsModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    ColorFadeModule,\n    MatButtonToggleModule\n  ]\n})\nexport class UnitsModule {\n}\n","export class Units{\n    $key: string;\n    estado: string;\n    folioConcesion: number;\n    id: number;\n    localidad: string;\n    municipio: string;\n    noUnidad: number;\n    placa: string;\n    serieMotor: number;\n}"],"sourceRoot":"webpack:///","file":"pages-apps-units-units-module-es5.js"}