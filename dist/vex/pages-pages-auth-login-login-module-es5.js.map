{"version":3,"sources":["src/app/pages/pages/auth/login/login.component.html","src/@vex/animations/fade-in-up.animation.ts","src/app/pages/pages/auth/login/login-routing.module.ts","src/app/pages/pages/auth/login/login.component.scss","src/app/pages/pages/auth/login/login.component.ts","src/app/pages/pages/auth/login/login.module.ts","src/app/shared/models/users/usersapi.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"w-full h-full bg-pattern\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div @fadeInUp class=\\\"card overflow-hidden w-full max-w-xs\\\">\\n    <div class=\\\"p-6 pb-0\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n      <div class=\\\"fill-current text-center\\\">\\n        <img class=\\\"w-16\\\" src=\\\"assets/img/demo/logo.svg\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"text-center mt-4\\\">\\n      <h2 class=\\\"title m-0\\\">Welcome back</h2>\\n      <h4 class=\\\"body-2 text-secondary m-0\\\">Sign in with your credentials below.</h4>\\n    </div>\\n\\n    <div [formGroup]=\\\"form\\\" class=\\\"p-6\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"16px\\\">\\n      <div fxFlex=\\\"auto\\\" fxLayout=\\\"column\\\">\\n        <mat-form-field fxFlex=\\\"grow\\\">\\n          <mat-label>E-Mail</mat-label>\\n          <input formControlName=\\\"email\\\" matInput required>\\n          <mat-error *ngIf=\\\"form.get('email').hasError('required')\\\">We need an email address to log you in</mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlex=\\\"grow\\\">\\n          <mat-label>Password</mat-label>\\n          <input [type]=\\\"inputType\\\" formControlName=\\\"password\\\" matInput required>\\n          <button (click)=\\\"toggleVisibility()\\\" mat-icon-button matSuffix matTooltip=\\\"Toggle Visibility\\\" type=\\\"button\\\">\\n            <mat-icon *ngIf=\\\"visible\\\" [icIcon]=\\\"icVisibility\\\"></mat-icon>\\n            <mat-icon *ngIf=\\\"!visible\\\" [icIcon]=\\\"icVisibilityOff\\\"></mat-icon>\\n          </button>\\n          <mat-hint>Click the eye to toggle visibility</mat-hint>\\n          <mat-error *ngIf=\\\"form.get('password').hasError('required')\\\">We need a password to log you in</mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        <mat-checkbox class=\\\"caption\\\" color=\\\"primary\\\">Remember Me</mat-checkbox>\\n        <a [routerLink]=\\\"['/forgot-password']\\\" class=\\\"caption\\\">Forgot Password?</a>\\n      </div>\\n\\n      <button (click)=\\\"send()\\\" color=\\\"primary\\\" mat-raised-button type=\\\"button\\\">\\n        SIGN IN\\n      </button>\\n\\n      <p class=\\\"text-secondary text-center\\\">\\n        Don't have an account?<br/>\\n        <a [routerLink]=\\\"['/register']\\\">Click here to create one</a>\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n\"","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhZ2VzL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport icVisibility from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\nimport { UsersService } from \"../../../../shared/services/users/users.service\"\nimport { UserApi } from \"../../../../shared/models/users/usersapi\";\nimport { StorageService } from \"../../../../shared/services/storage/storage.service\";\n\n@Component({\n  selector: 'vex-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    fadeInUp400ms\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  inputType = 'password';\n  visible = false;\n\n  icVisibility = icVisibility;\n  icVisibilityOff = icVisibilityOff;\n  \n  user = {\n\t\temailId: \"asti\",\n\t\tloginPassword: \"asti123\"\n\t};\n  \n  constructor(private router: Router,\n              private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar,\n              private usersService: UsersService,\n              private storageService: StorageService\n          \n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n\n  send() {\n\n      var mydata = new UserApi;\n       \n      mydata.username = this.user.emailId;\n      mydata.password = this.user.loginPassword;\n  \n      console.log(\"my user: \"+ mydata.username)\n      console.log(\"my pasword: \"+ mydata.password)\n       \n      return this.usersService.postUsers(mydata)\n       .subscribe((data: any) => {\n\n        console.log(\"post users: \" + data.accessToken );\n        this.storageService.setLocal(\"token\", data.accessToken);\n\n        this.router.navigate(['/']);\n        this.snackbar.open('Lucky you! Looks like you didn\\'t need a password or email address! For a real application we provide validators to prevent this. ;)', 'LOL THANKS', {\n          duration: 10000\n        });\n      \n      }) \n      \n\n  }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n    IconModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatCheckboxModule\n  ]\n})\nexport class LoginModule {\n}\n","  \nexport class UserApi {\n  username : string;\n  password: string;\n\n}"],"sourceRoot":"webpack:///","file":"pages-pages-auth-login-login-module-es5.js"}